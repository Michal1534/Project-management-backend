generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id            Int            @id @default(autoincrement())
  name          String
  sprints       Sprint[]
  project_users UserProjects[]
    vacations Vacation[]
}

model Sprint {
  id         Int       @id @default(autoincrement())
  project_id Int
  name       String
  start_date DateTime?
  end_date   DateTime?
  status     String    @default("NOT_STARTED")
  project    Project   @relation(fields: [project_id], references: [id])
  tasks      Task[]
}

model Task {
  id                  Int       @id @default(autoincrement())
  sprint_id           Int
  name                String
  description         String
  task_type           String
  priority            String
  status              String
  component           String
  created_at          DateTime
  story_points        Int
  assigned_user       User?     @relation("AssignedUser", fields: [assigned_user_id], references: [id])
  assigned_user_id    Int?
  reported_by_user    User      @relation("ReportedByUser", fields: [reported_by_user_id], references: [id])
  reported_by_user_id Int
  sprint              Sprint    @relation(fields: [sprint_id], references: [id])
  Comments            Comment[]
}

model User {
  id         Int    @id @default(autoincrement())
  username   String
  password   String
  first_name String
  last_name  String
  email      String
  specialization   String
  role       String
  expirience String @default("")
  workload   Float

  assigned_tasks Task[]         @relation("AssignedUser")
  reported_tasks Task[]         @relation("ReportedByUser")
  comments       Comment[]
  vacations      Vacation[]
  user_projects  UserProjects[]
}

model Comment {
  id              Int      @id @default(autoincrement())
  task_id         Int
  user_id         Int
  comment_content String
  timestamp       DateTime

  task Task @relation(fields: [task_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
}

model Vacation {
  id         Int      @id @default(autoincrement())
  user_id    Int
    project_id Int

  start_date DateTime
  end_date   DateTime
  reason     String

  user User @relation(fields: [user_id], references: [id])
  project Project @relation(fields: [project_id], references: [id])

}

model UserProjects {
  user_id    Int
  project_id Int

  user    User    @relation(fields: [user_id], references: [id])
  project Project @relation(fields: [project_id], references: [id])

  @@id([user_id, project_id])
}
